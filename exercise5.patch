From 9b2466736289f61419402e690ec20cd5a056a903 Mon Sep 17 00:00:00 2001
From: Imran <imranbirfan@gmail.com>
Date: Wed, 27 Sep 2017 20:33:35 -0700
Subject: [PATCH] Changes introduced to layout of assignment 4

Restarted from begining. Apparently the branch I was using didn't have functional send button. Also corrected implementation of layout xml files.

Modified Adapter and ViewHolder

Updated UI
---
 app/build.gradle                                   |   1 +
 .../edu/sfsu/csc780/chathub/model/ChatMessage.java |  10 ++
 .../edu/sfsu/csc780/chathub/ui/MainActivity.java   | 161 +++++++++++++++++++++
 .../edu/sfsu/csc780/chathub/ui/MessageUtil.java    |  53 +++++++
 app/src/main/res/drawable/ic_image_black_24px.xml  |   9 ++
 app/src/main/res/layout/activity_main.xml          |  38 ++++-
 app/src/main/res/layout/item_message.xml           |  16 +-
 7 files changed, 278 insertions(+), 10 deletions(-)
 create mode 100644 app/src/main/res/drawable/ic_image_black_24px.xml

diff --git a/app/build.gradle b/app/build.gradle
index 8d9cde0..ff2a8bb 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -47,6 +47,7 @@ dependencies {
     // Firebase
     compile 'com.google.firebase:firebase-database:10.0.1'
     compile 'com.google.firebase:firebase-auth:10.0.1'
+    compile'com.google.firebase:firebase-storage:10.0.1'
     // Firebase UI
     compile 'com.firebaseui:firebase-ui-database:0.4.0'
 
diff --git a/app/src/main/java/edu/sfsu/csc780/chathub/model/ChatMessage.java b/app/src/main/java/edu/sfsu/csc780/chathub/model/ChatMessage.java
index 21b875f..dd6950d 100644
--- a/app/src/main/java/edu/sfsu/csc780/chathub/model/ChatMessage.java
+++ b/app/src/main/java/edu/sfsu/csc780/chathub/model/ChatMessage.java
@@ -20,6 +20,7 @@ public class ChatMessage {
     private String text;
     private String name;
     private String photoUrl;
+    private String imageUrl;
 
     public ChatMessage() {
     }
@@ -30,6 +31,15 @@ public class ChatMessage {
         this.photoUrl = photoUrl;
     }
 
+    public ChatMessage(String text, String name, String photoUrl, String imageUrl){
+        this(text, name, photoUrl);
+        this.imageUrl= imageUrl;
+    }
+
+    public String getImageUrl() {
+        return imageUrl;
+    }
+
     public String getText() {
         return text;
     }
diff --git a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java
index 252a3f3..95e64c9 100644
--- a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java
+++ b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MainActivity.java
@@ -15,10 +15,15 @@
  */
 package edu.sfsu.csc780.chathub.ui;
 
+import android.app.Activity;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.graphics.Bitmap;
+import android.net.Uri;
 import android.os.Bundle;
+import android.os.Environment;
 import android.preference.PreferenceManager;
+import android.provider.MediaStore;
 import android.support.annotation.NonNull;
 import android.support.design.widget.FloatingActionButton;
 import android.support.v7.app.AppCompatActivity;
@@ -33,6 +38,7 @@ import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.EditText;
+import android.widget.ImageButton;
 import android.widget.ProgressBar;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -41,8 +47,19 @@ import com.firebase.ui.database.FirebaseRecyclerAdapter;
 import com.google.android.gms.auth.api.Auth;
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.api.GoogleApiClient;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.storage.StorageReference;
+import com.google.firebase.storage.UploadTask;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
 
 import de.hdodenhof.circleimageview.CircleImageView;
 import edu.sfsu.csc780.chathub.R;
@@ -58,11 +75,14 @@ public class MainActivity extends AppCompatActivity
     private static final int REQUEST_INVITE = 1;
     public static final int MSG_LENGTH_LIMIT = 10;
     public static final String ANONYMOUS = "anonymous";
+    private static final int REQUEST_PICK_IMAGE = 1;
+    private static final double MAX_LINEAR_DIMENSION = 500.0;
     private String mUsername;
     private String mPhotoUrl;
     private SharedPreferences mSharedPreferences;
     private GoogleApiClient mGoogleApiClient;
 
+    private ImageButton mImageButton;
     private FloatingActionButton mSendButton;
     private RecyclerView mMessageRecyclerView;
     private LinearLayoutManager mLinearLayoutManager;
@@ -152,6 +172,14 @@ public class MainActivity extends AppCompatActivity
                 mMessageEditText.setText("");
             }
         });
+
+        mImageButton = (ImageButton) findViewById(R.id.shareImageButton);
+        mImageButton.setOnClickListener(new View.OnClickListener(){
+            @Override
+            public void onClick(View v){
+                pickImage();
+            }
+        });
     }
 
     @Override
@@ -209,4 +237,137 @@ public class MainActivity extends AppCompatActivity
         Log.d(TAG, "onConnectionFailed:" + connectionResult);
         Toast.makeText(this, "Google Play Services error.", Toast.LENGTH_SHORT).show();
     }
+
+    private void createMessage(Uri uri){
+        if (uri == null) Log.e(TAG, "Could not create image with null uri");
+
+        final StorageReference imageReference = MessageUtil.getImageStorageReference(mUser, uri);
+        UploadTask uploadTask = imageReference.putFile(uri);
+
+        uploadTask.addOnFailureListener(new OnFailureListener() {
+            @Override
+            public void onFailure(@NonNull Exception exception) {
+                Log.e(TAG, "Failed to upload image message");
+            }
+        }).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+            @Override
+            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
+                ChatMessage chatMessage = new
+                        ChatMessage(mMessageEditText.getText().toString(),
+                        mUsername,
+                        mPhotoUrl,
+                        imageReference.toString());
+                MessageUtil.send(chatMessage);
+                mMessageEditText.setText("");
+            }
+        });
+    }
+
+    private Bitmap getBitmapForUri(Uri imageUri){
+        Bitmap bitmap = null;
+        try{
+            bitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), imageUri);
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
+
+        return bitmap;
+    }
+
+    private Bitmap scaleImage(Bitmap bitmap){
+        int originalHeight = bitmap.getHeight();
+        int originalWidth = bitmap.getWidth();
+        double scaleFactor = MAX_LINEAR_DIMENSION / (double) (originalHeight + originalWidth);
+
+        if (scaleFactor < 1.0){
+            int targetWidth = (int) Math.round(originalWidth*scaleFactor);
+            int targetHeight = (int) Math.round(originalHeight*scaleFactor);
+            return Bitmap.createScaledBitmap(bitmap, targetWidth, targetHeight, true);
+        }
+        else{
+            return bitmap;
+        }
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data){
+        super.onActivityResult(requestCode, resultCode, data);
+        Log.d(TAG, "onActivityResult: request= " + requestCode + ", result=" + resultCode);
+
+        if (requestCode == REQUEST_PICK_IMAGE && resultCode == Activity.RESULT_OK){
+            //process selected image here
+
+            if (data != null){
+                Uri uri= data.getData();
+                Log.i(TAG, "Uri: " + uri.toString());
+                //resize if image is too big
+                Bitmap bitmap= getBitmapForUri(uri);
+                Bitmap resizedBitmap= scaleImage(bitmap);
+                if (bitmap != resizedBitmap){
+                    uri = savePhotoImage(resizedBitmap);
+                }
+                createMessage(uri);
+            }
+
+            else{
+                Log.e(TAG, "Cannot get image for uploading");
+            }
+        }
+    }
+
+    private  Uri savePhotoImage(Bitmap imageBitmap){
+        File photoFile = null;
+        try{
+            photoFile= createImageFile();
+        }
+        catch (IOException e){
+            e.printStackTrace();
+        }
+        if (photoFile == null){
+            Log.d(TAG, "Error creating media file");
+            return null;
+        }
+
+        try{
+            FileOutputStream fos = new FileOutputStream(photoFile);
+            imageBitmap.compress(Bitmap.CompressFormat.PNG, 90, fos);
+            fos.close();
+        }
+
+        catch (FileNotFoundException e){
+            Log.d(TAG, "File not found: " + e.getMessage());
+        }
+
+        catch (IOException e){
+            Log.d(TAG, "Error accessing file: " + e.getMessage());
+        }
+
+        return Uri.fromFile(photoFile);
+    }
+
+    private File createImageFile() throws IOException {
+        //Create Image File Name
+        String timeStamp = new SimpleDateFormat("yyyyMMdd-HHmmss").format(new Date());
+        String imageFileNamePrefix= "chathub-" + timeStamp;
+        File storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES);
+
+        File imageFile = File.createTempFile(
+                imageFileNamePrefix,
+                ".jpg",
+                storageDir
+        );
+
+        return  imageFile;
+    }
+
+    private void pickImage(){
+        Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);
+
+        intent.addCategory(Intent.CATEGORY_OPENABLE);
+
+        intent.setType("image/*");
+
+        startActivityForResult(intent, REQUEST_PICK_IMAGE);
+    }
 }
diff --git a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java
index 32cbcb6..933d878 100644
--- a/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java
+++ b/app/src/main/java/edu/sfsu/csc780/chathub/ui/MessageUtil.java
@@ -2,19 +2,29 @@ package edu.sfsu.csc780.chathub.ui;
 
 import android.app.Activity;
 import android.graphics.Bitmap;
+import android.icu.util.Calendar;
+import android.net.Uri;
+import android.support.annotation.NonNull;
 import android.support.v4.content.ContextCompat;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
+import android.util.Log;
 import android.view.View;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.request.animation.GlideAnimation;
 import com.bumptech.glide.request.target.SimpleTarget;
 import com.firebase.ui.database.FirebaseRecyclerAdapter;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
 
 import de.hdodenhof.circleimageview.CircleImageView;
 import edu.sfsu.csc780.chathub.model.ChatMessage;
@@ -33,6 +43,7 @@ public class MessageUtil
 
     private static MessageLoadListener sAdapterListener;
     private static FirebaseAuth sFirebaseAuth;
+    private static FirebaseStorage sStorage = FirebaseStorage.getInstance();
 
     public interface MessageLoadListener {public void onLoadComplete();}
 
@@ -92,6 +103,38 @@ public class MessageUtil
                                 .asBitmap()
                                 .into(target);
                         }
+                        if (chatMessage.getImageUrl() != null){
+                            //Set View visibilities for a image message
+                            viewHolder.messageImageView.setVisibility(View.VISIBLE);
+                            viewHolder.messageTextView.setVisibility(View.GONE);
+                            //Load image for message
+                            try{
+                                final StorageReference gsReference =
+                                        sStorage.getReferenceFromUrl(chatMessage.getImageUrl());
+                                gsReference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
+                                    @Override
+                                    public void onSuccess(Uri uri) {
+                                        Glide.with(activity)
+                                                .load(uri)
+                                                .into(viewHolder.messageImageView);
+                                    }
+                                }).addOnFailureListener(new OnFailureListener(){
+                                    @Override
+                                    public void onFailure(@NonNull Exception exception){
+                                        Log.e(LOG_TAG, "Could not load image for message", exception);
+                                    }
+                                });
+                            }
+                            catch (IllegalArgumentException e){
+                                viewHolder.messageTextView.setText("Error loading image");
+                                Log.e(LOG_TAG, e.getMessage() + " : " + chatMessage.getImageUrl());
+                            }
+                        }
+                        else{
+                            //Set view visibilities for a text message
+                            viewHolder.messageTextView.setVisibility(View.VISIBLE);
+                            viewHolder.messageImageView.setVisibility(View.GONE);
+                        }
                     } //End populateViewHolder
                 }; //End Firebase Recycler Adapter creation
 
@@ -122,6 +165,7 @@ public class MessageUtil
         public TextView messageTextView;
         public TextView messengerTextView;
         public CircleImageView messengerImageView;
+        public ImageView messageImageView;
 
         public MessageViewHolder(View v)
         {
@@ -129,10 +173,19 @@ public class MessageUtil
             messageTextView = (TextView) itemView.findViewById(R.id.messageTextView);
             messengerTextView = (TextView) itemView.findViewById(R.id.messengerTextView);
             messengerImageView = (CircleImageView) itemView.findViewById(R.id.messengerImageView);
+            messageImageView = (ImageView) itemView.findViewById(R.id.messageImageView);
         }
 
     }
 
+    public static StorageReference getImageStorageReference(FirebaseUser user, Uri uri){
+        //Create a blob storage reference with path : bucket/userId/timeMs/filename
+
+        long nowMs= Calendar.getInstance().getTimeInMillis();
+
+        return sStorage.getReference().child(user.getUid() + "/" + nowMs + "/" + uri.getLastPathSegment());
+    }
+
 }
 
 
diff --git a/app/src/main/res/drawable/ic_image_black_24px.xml b/app/src/main/res/drawable/ic_image_black_24px.xml
new file mode 100644
index 0000000..f9bc47d
--- /dev/null
+++ b/app/src/main/res/drawable/ic_image_black_24px.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:pathData="M21,19V5c0,-1.1 -0.9,-2 -2,-2H5c-1.1,0 -2,0.9 -2,2v14c0,1.1 0.9,2 2,2h14c1.1,0 2,-0.9 2,-2zM8.5,13.5l2.5,3.01L14.5,12l4.5,6H5l3.5,-4.5z"
+        android:fillColor="#000000"/>
+</vector>
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
index c131104..e42df91 100644
--- a/app/src/main/res/layout/activity_main.xml
+++ b/app/src/main/res/layout/activity_main.xml
@@ -23,20 +23,44 @@
         android:layout_alignParentBottom="true"
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
-        android:orientation="horizontal">
+        android:orientation="vertical">
 
         <EditText
             android:id="@+id/messageEditText"
-            android:layout_width="0dp"
+            android:layout_width="match_parent"
             android:layout_height="wrap_content"
+            android:inputType="textMultiLine"
+            android:padding="20dp"
             android:layout_gravity="center_vertical"
             android:layout_weight="1"/>
-
-        <android.support.design.widget.FloatingActionButton
-            android:id="@+id/sendButton"
+        <LinearLayout
+            android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:layout_width="wrap_content"
-            android:src="@drawable/ic_send_black_24"/>
+            android:orientation="horizontal">
+
+            <View
+                android:layout_width="0dp"
+                android:layout_height="0dp"
+                android:layout_weight="1"/>
+
+            <ImageButton
+                android:id="@+id/shareImageButton"
+                android:src="@drawable/ic_image_black_24px"
+                android:background="@android:color/transparent"
+                android:layout_gravity="center"
+                android:padding="16dp"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content" />
+
+            <android.support.design.widget.FloatingActionButton
+                android:id="@+id/sendButton"
+                android:layout_height="wrap_content"
+                android:layout_width="wrap_content"
+                android:src="@drawable/ic_send_black_24"/>
+
+        </LinearLayout>
+        
+
     </LinearLayout>
 
     <ProgressBar
diff --git a/app/src/main/res/layout/item_message.xml b/app/src/main/res/layout/item_message.xml
index d12eb54..b76495d 100644
--- a/app/src/main/res/layout/item_message.xml
+++ b/app/src/main/res/layout/item_message.xml
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:layout_width="match_parent"
-              android:layout_height="wrap_content"
-              android:orientation="vertical">
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:orientation="vertical">
 
     <LinearLayout
         android:layout_width="match_parent"
@@ -30,6 +31,15 @@
                 android:layout_weight="0"
                 android:textAppearance="?android:attr/textAppearanceLarge"/>
 
+            <ImageView
+                android:id="@+id/messageImageView"
+                android:layout_width="fill_parent"
+                android:layout_height="100dp"
+                android:scaleType="fitStart"
+                android:visibility="gone"
+                tools:src="@drawable/ic_image_black_24px"
+                tools:visibility="visible"/>
+
             <TextView
                 android:id="@+id/messengerTextView"
                 android:layout_width="wrap_content"
-- 
2.7.4

